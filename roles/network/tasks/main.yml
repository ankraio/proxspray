
## Ensure /etc/network/interfaces.d exists before copying static config
- name: Ensure /etc/network/interfaces.d directory exists
  ansible.builtin.file:
    path: /etc/network/interfaces.d
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Ensure ifupdown2 is installed
  ansible.builtin.apt:
    name: ifupdown2
    state: present
    update_cache: true
  become: true



# Remove static config for ens19 (if present)
- name: Remove static ens19 config if present
  ansible.builtin.file:
    path: /etc/network/interfaces.d/ens19-static
    state: absent
  when: "'ens19' in ansible_facts.interfaces"


- name: Ensure /etc/network/interfaces exists
  ansible.builtin.file:
    path: /etc/network/interfaces
    state: touch
    owner: root
    group: root
    mode: '0644'

- name: Add header to /etc/network/interfaces
  ansible.builtin.lineinfile:
    path: /etc/network/interfaces
    line: '# This file is managed by Ansible. See network-dhcp.yml.'
    state: present
    insertafter: BOF

- name: Ensure /etc/network/interfaces sources interfaces.d only once
  ansible.builtin.lineinfile:
    path: /etc/network/interfaces
    regexp: '^source /etc/network/interfaces.d/\*'
    line: 'source /etc/network/interfaces.d/*'
    state: present
    insertafter: EOF
- name: Ensure interfaces are up
  ansible.builtin.command: ip link set {{ item.name }} up
  loop: "{{ dhcp_interfaces }}"
  changed_when: false

- name: Create network interfaces.d directory
  ansible.builtin.file:
    path: /etc/network/interfaces.d
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Configure interfaces for DHCP
  ansible.builtin.template:
    src: interface-dhcp.j2
    dest: /etc/network/interfaces.d/{{ item.name }}
    owner: root
    group: root
    mode: '0644'
    # backup removed
  loop: "{{ dhcp_interfaces }}"
  notify: Reload networking

- name: Ensure ens18 does not set a DHCP gateway
  ansible.builtin.lineinfile:
    path: /etc/network/interfaces.d/ens18
    line: '    post-up route del default dev ens18 || true'
    insertafter: '^iface ens18 inet dhcp'
    state: present
  when: "'ens18' in dhcp_interfaces | map(attribute='name') | list"

- name: Configure Cloudflare DNS resolver
  ansible.builtin.copy:
    dest: /etc/resolv.conf
    content: |
      nameserver {{ cloudflare_dns }}
    owner: root
    group: root
    mode: '0644'
    # backup removed


# Use ifupdown2 to reload all interfaces atomically
- name: Reload all interfaces with ifupdown2
  ansible.builtin.command: ifreload -a
  register: interface_reload
  changed_when: false
